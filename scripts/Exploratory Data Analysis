/* Exploratory Data Analysis */

--1. Database Exploration

-- Explore all the objects in the database

select * from information_schema.tables;

-- Explore all the columns in the database

select * from information_schema.columns
where table_name = 'DIM_CUSTOMERS';

--2. Dimensions Exploration

-- explore all countries our customers are from

select distinct country
from gold.dim_customers;

-- explore all categories "the major divisions"

select 
    distinct category, subcategory,product_name
from dim_products
order by 1,2,3;

--3. Date Exploration

-- find the date of the first and last order
-- how many years of sales avialable

select 
    min(order_date) first_order_date,
    max(order_date) last_order_date,
    datediff(year,first_order_date,last_order_date) order_range_years,
    datediff(month,first_order_date,last_order_date) order_range_months,
from fact_sales;

-- find the youngest and oldest customer 
select
    min(birthdate) oldest_customer,
    datediff(year,oldest_customer,getdate()) oldest_age,
    max(birthdate) youngest_customer,
    datediff(year,youngest_customer,current_date()) youngest_age
from dim_customers;


-- find the total sales

select
    sum(sales_amount)
from fact_sales;

-- find how many items are sold
select
    sum(quantity)
from fact_sales;

-- find the average selling price
select
    avg(price)
from fact_sales;

-- find the total number of orders
select
    count(order_number) total_orders, --60398 records
    (count(distinct order_number)) total_orders  --27659 records
from fact_sales;

-- find the total number of products
select
    count(product_name) total_products, --60398 records
    (count(distinct product_key)) total_products --27659 records
from dim_products;

-- find the total number of customers
select
    count(customer_key) total_customers,
    count(distinct customer_id) total_customers
from dim_customers;

-- find the total number of customers that has placed an order
select
    count(customer_key) total_customer_count,
    count(distinct customer_key) total_customers_placed_order
from fact_sales;

-- Generate a report that shows all key metrics of the  business

select 'Total Sales' as measure_name,sum(sales_amount) as measure_value from fact_sales
UNION ALL
select 'Total Quantity' as measure_name,sum(quantity) as measure_value from fact_sales
UNION ALL
select 'Average Price',avg(price) from fact_sales
UNION ALL
select 'Total Number of Orders',(count(distinct order_number)) from fact_sales
UNION ALL
select 'Total Number of producrts',(count(distinct product_key)) from dim_products
UNION ALL
select 'Total Number of customers',(count(distinct customer_id)) from dim_customers;


-- 5. Magnitude

-- find the total customers by country

select country,count(customer_key) total_customers from dim_customers
group by country
order by total_customers DESC;

 -- find the total customers by gender
 
select gender,count(customer_key) total_customers from dim_customers
group by gender
order by total_customers DESC;

-- find the total products by category

select category,count(product_key) total_products from dim_products
group by category
order by total_products DESC;

-- find the average cost in each category

select category,avg(cost) avg_cost from dim_products
group by category
order by avg_cost DESC;

-- What is the total revenue generated for each category

select p.category,sum(f.sales_amount) total_revenue from fact_sales f
Left join dim_products p on p.product_key =f.product_key
group by p.category
order by total_revenue DESC;

--  What is the total revenue generated by each customer

select c.customer_key,c.first_name, c.last_name,sum(f.sales_amount) total_revenue from fact_sales f
Left join dim_customers c on c.customer_key= f.customer_key
group by c.customer_key,c.first_name,c.last_name
order by total_revenue DESC;

-- What is the distribution of items sold across the countries

select c.country,sum(f.quantity) total_sold_items from fact_sales f
Left join dim_customers c on c.customer_key= f.customer_key
group by c.country
order by total_sold_items DESC;

--6. Ranking Top-N | Bottom-N

-- which 5 products generate the highest revenue 

select
    p.product_name,sum(f.sales_amount) total_revenue,
    rank() over(order by sum(f.sales_amount) DESC) rank_category
from fact_sales f
left join dim_products p
on p.product_key = f.product_key
group by p.product_name
limit 5;


select
    p.subcategory,sum(f.sales_amount) total_revenue,
from fact_sales f
left join dim_products p
on p.product_key = f.product_key
group by p.subcategory
order by total_revenue DESC
limit 5;

-- What are the 5 worst-performing products in terms of sales

select
    p.product_name,sum(f.sales_amount) total_revenue,
    rank() over(order by sum(f.sales_amount) ASC) rank_category
from fact_sales f
left join dim_products p
on p.product_key = f.product_key
group by p.product_name
order by total_revenue ASC
limit 5;

select * from (
select
    p.product_name,sum(f.sales_amount) total_revenue,
    rank() over(order by sum(f.sales_amount) ASC) rank_category
from fact_sales f
left join dim_products p
on p.product_key = f.product_key
group by p.product_name) t 
where rank_category <=5;

-- find the top 10 customers who generated the highest revenue

select 
    c.customer_key,
    c.first_name,
    c.last_name,
    sum(f.sales_amount) total_revenue,
    row_number() over(order by sum(f.sales_amount) DESC ) customer_rank
from fact_sales f
left join dim_customers c
on c.customer_key = f.customer_key
group by c.customer_key,c.first_name,c.last_name
limit 10;


-- find the 3 customers with the fewest orders placed 
select 
    c.customer_key,
    c.first_name,
    c.last_name,
    count(distinct order_number) total_orders,
    --row_number() over(order by total_orders asc ) customer_rank
from fact_sales f
left join dim_customers c
on c.customer_key = f.customer_key
group by c.customer_key,c.first_name,c.last_name
order by total_orders asc
limit 3;
